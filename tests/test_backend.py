import unittest
import backend

# Test cases
known_values = [
    {
        'input': {
            'r': 2,
            'c': 2,
            'r_num': [[1], [2]],
            'c_num': [[2], [1]]
        },
        'output': [
            {
                "A_0_0": 1,
                "A_0_1": 0,
                "A_1_0": 1,
                "A_1_1": 1
            }
        ]
    },
    {
        'input': {
            'r': 2,
            'c': 3,
            'r_num': [[1], [2]],
            'c_num': [[1], [1], [1]],
            'crossed_cells': [(0, 1)]
        },
        'output': [
            {
                "A_0_0": 1,
                "A_0_1": 0,
                "A_0_2": 0,
                "A_1_0": 0,
                "A_1_1": 1,
                "A_1_2": 1
            },
            {
                "A_0_0": 0,
                "A_0_1": 0,
                "A_0_2": 1,
                "A_1_0": 1,
                "A_1_1": 1,
                "A_1_2": 0
            }
        ]
    },
    {
        'input': {
            'r': 10,
            'c': 10,
            'r_num': [[4], [4], [2], [9], [10], [10], [9], [2], [5], [5]],
            'c_num': [[2], [4], [4], [4, 2], [4, 2], [2, 4, 2], [2, 7], [10], [7], [4]]
        },
        'output': [
            {
                "A_0_0": 0,
                "A_0_1": 0,
                "A_0_2": 0,
                "A_0_3": 0,
                "A_0_4": 0,
                "A_0_5": 1,
                "A_0_6": 1,
                "A_0_7": 1,
                "A_0_8": 1,
                "A_0_9": 0,
                "A_1_0": 0,
                "A_1_1": 0,
                "A_1_2": 0,
                "A_1_3": 0,
                "A_1_4": 0,
                "A_1_5": 1,
                "A_1_6": 1,
                "A_1_7": 1,
                "A_1_8": 1,
                "A_1_9": 0,
                "A_2_0": 0,
                "A_2_1": 0,
                "A_2_2": 0,
                "A_2_3": 0,
                "A_2_4": 0,
                "A_2_5": 0,
                "A_2_6": 0,
                "A_2_7": 1,
                "A_2_8": 1,
                "A_2_9": 0,
                "A_3_0": 0,
                "A_3_1": 1,
                "A_3_2": 1,
                "A_3_3": 1,
                "A_3_4": 1,
                "A_3_5": 1,
                "A_3_6": 1,
                "A_3_7": 1,
                "A_3_8": 1,
                "A_3_9": 1,
                "A_4_0": 1,
                "A_4_1": 1,
                "A_4_2": 1,
                "A_4_3": 1,
                "A_4_4": 1,
                "A_4_5": 1,
                "A_4_6": 1,
                "A_4_7": 1,
                "A_4_8": 1,
                "A_4_9": 1,
                "A_5_0": 1,
                "A_5_1": 1,
                "A_5_2": 1,
                "A_5_3": 1,
                "A_5_4": 1,
                "A_5_5": 1,
                "A_5_6": 1,
                "A_5_7": 1,
                "A_5_8": 1,
                "A_5_9": 1,
                "A_6_0": 0,
                "A_6_1": 1,
                "A_6_2": 1,
                "A_6_3": 1,
                "A_6_4": 1,
                "A_6_5": 1,
                "A_6_6": 1,
                "A_6_7": 1,
                "A_6_8": 1,
                "A_6_9": 1,
                "A_7_0": 0,
                "A_7_1": 0,
                "A_7_2": 0,
                "A_7_3": 0,
                "A_7_4": 0,
                "A_7_5": 0,
                "A_7_6": 1,
                "A_7_7": 1,
                "A_7_8": 0,
                "A_7_9": 0,
                "A_8_0": 0,
                "A_8_1": 0,
                "A_8_2": 0,
                "A_8_3": 1,
                "A_8_4": 1,
                "A_8_5": 1,
                "A_8_6": 1,
                "A_8_7": 1,
                "A_8_8": 0,
                "A_8_9": 0,
                "A_9_0": 0,
                "A_9_1": 0,
                "A_9_2": 0,
                "A_9_3": 1,
                "A_9_4": 1,
                "A_9_5": 1,
                "A_9_6": 1,
                "A_9_7": 1,
                "A_9_8": 0,
                "A_9_9": 0
            }
        ]
    },
    {
        'input': {
            'r': 10,
            'c': 10,
            'r_num': [[5], [3, 1], [3, 1], [1, 2, 1], [10], [9], [3], [3], [3], [3]],
            'c_num': [[2], [2], [2], [2], [2], [10], [10], [3, 6], [1, 2], [6]]
        },
        'output': [
            {
                "A_0_0": 0,
                "A_0_1": 0,
                "A_0_2": 0,
                "A_0_3": 0,
                "A_0_4": 0,
                "A_0_5": 1,
                "A_0_6": 1,
                "A_0_7": 1,
                "A_0_8": 1,
                "A_0_9": 1,
                "A_1_0": 0,
                "A_1_1": 0,
                "A_1_2": 0,
                "A_1_3": 0,
                "A_1_4": 0,
                "A_1_5": 1,
                "A_1_6": 1,
                "A_1_7": 1,
                "A_1_8": 0,
                "A_1_9": 1,
                "A_2_0": 0,
                "A_2_1": 0,
                "A_2_2": 0,
                "A_2_3": 0,
                "A_2_4": 0,
                "A_2_5": 1,
                "A_2_6": 1,
                "A_2_7": 1,
                "A_2_8": 0,
                "A_2_9": 1,
                "A_3_0": 1,
                "A_3_1": 0,
                "A_3_2": 0,
                "A_3_3": 0,
                "A_3_4": 0,
                "A_3_5": 1,
                "A_3_6": 1,
                "A_3_7": 0,
                "A_3_8": 0,
                "A_3_9": 1,
                "A_4_0": 1,
                "A_4_1": 1,
                "A_4_2": 1,
                "A_4_3": 1,
                "A_4_4": 1,
                "A_4_5": 1,
                "A_4_6": 1,
                "A_4_7": 1,
                "A_4_8": 1,
                "A_4_9": 1,
                "A_5_0": 0,
                "A_5_1": 1,
                "A_5_2": 1,
                "A_5_3": 1,
                "A_5_4": 1,
                "A_5_5": 1,
                "A_5_6": 1,
                "A_5_7": 1,
                "A_5_8": 1,
                "A_5_9": 1,
                "A_6_0": 0,
                "A_6_1": 0,
                "A_6_2": 0,
                "A_6_3": 0,
                "A_6_4": 0,
                "A_6_5": 1,
                "A_6_6": 1,
                "A_6_7": 1,
                "A_6_8": 0,
                "A_6_9": 0,
                "A_7_0": 0,
                "A_7_1": 0,
                "A_7_2": 0,
                "A_7_3": 0,
                "A_7_4": 0,
                "A_7_5": 1,
                "A_7_6": 1,
                "A_7_7": 1,
                "A_7_8": 0,
                "A_7_9": 0,
                "A_8_0": 0,
                "A_8_1": 0,
                "A_8_2": 0,
                "A_8_3": 0,
                "A_8_4": 0,
                "A_8_5": 1,
                "A_8_6": 1,
                "A_8_7": 1,
                "A_8_8": 0,
                "A_8_9": 0,
                "A_9_0": 0,
                "A_9_1": 0,
                "A_9_2": 0,
                "A_9_3": 0,
                "A_9_4": 0,
                "A_9_5": 1,
                "A_9_6": 1,
                "A_9_7": 1,
                "A_9_8": 0,
                "A_9_9": 0
            }
        ]
    }
]


class KnownGood(unittest.TestCase):
    def __init__(self, input_params, output):
        super(KnownGood, self).__init__()
        self.input_params = input_params
        self.output = output
    
    def runTest(self):
        self.assertEqual(
            backend.backend(self.input_params['r'], self.input_params['c'],
                            self.input_params['r_num'], self.input_params['c_num'],
                            self.input_params.get('crossed_cells', None)),
            self.output
        )

   
def suite():
    global known_values
    suite = unittest.TestSuite()
    suite.addTests(KnownGood(input_params=k['input'], output=k['output']) for k in known_values)
    return suite
   
 
if __name__ == '__main__':
    unittest.TextTestRunner().run(suite())
